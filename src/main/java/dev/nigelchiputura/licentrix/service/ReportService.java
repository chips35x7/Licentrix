package dev.nigelchiputura.licentrix.service;

import com.opencsv.CSVWriter;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import dev.nigelchiputura.licentrix.model.License;
import dev.nigelchiputura.licentrix.repository.LicenseRepository;
import org.springframework.stereotype.Service;

import java.io.ByteArrayOutputStream;
import java.io.OutputStreamWriter;
import java.util.List;

@Service
public class ReportService {

    private final LicenseRepository licenseRepo;

    public ReportService(LicenseRepository licenseRepo) {
        this.licenseRepo = licenseRepo;
    }

    // Generate CSV Report
    public byte[] generateLicenseCsv() throws Exception {
        List<License> licenses = licenseRepo.findAll();
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        CSVWriter writer = new CSVWriter(new OutputStreamWriter(out));

        writer.writeNext(new String[]{"ID", "Company", "License Type", "Issue Date", "Validity (years)"});

        for (License lic : licenses) {
            writer.writeNext(new String[]{
                    lic.getId().toString(),
                    lic.getCompany().getName(),
                    lic.getLicenseType().toString(),
                    lic.getIssueDate().toString(),
                    String.valueOf(lic.getValidityYears())
            });
        }
        writer.close();
        return out.toByteArray();
    }

    // Generate PDF report
    public byte[] generateLicensePdf() throws Exception {
        List<License> licenses = licenseRepo.findAll();
        ByteArrayOutputStream out = new ByteArrayOutputStream();

        Document doc = new Document();
        PdfWriter.getInstance(doc, out);
        doc.open();

        doc.add(new Paragraph("License Report", FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18)));
        doc.add(new Paragraph("Generated by Licentrix\n\n"));

        PdfPTable table = new PdfPTable(5);
        table.addCell("ID");
        table.addCell("Company");
        table.addCell("License Type");
        table.addCell("Issue Date");
        table.addCell("Validity (years)");

        for (License lic : licenses) {
            table.addCell(lic.getId().toString());
            table.addCell(lic.getCompany().getName());
            table.addCell(lic.getLicenseType().toString());
            table.addCell(lic.getIssueDate().toString());
            table.addCell(String.valueOf(lic.getValidityYears()));
        }

        doc.add(table);
        doc.close();
        return out.toByteArray();
    }
}
